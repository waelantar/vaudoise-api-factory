name: PR - Test, Quality & Build

on:
  pull_request:
    branches: [ main ]

jobs:
  test_and_quality:
    name: üß™ Testing & Quality
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready -U ${{ secrets.POSTGRES_USER }}
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/${{ secrets.POSTGRES_DB }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: maven

      - name: Run Tests
        run: ./mvnw verify

      - name: Generate Coverage Report
        run: ./mvnw jacoco:report

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build_docker:
    name: üèóÔ∏è Build Docker Image
    runs-on: ubuntu-latest
    needs: [ test_and_quality ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (for caching)
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image (no push)
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -t vaudoise-api:pr-${{ github.event.number }} .

      - name: Verify Docker Compose (local stack)
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          docker compose up -d
          sleep 20
          docker ps
          docker logs $(docker ps -q --filter "name=app")

      - name: Cleanup
        if: always()
        run: docker compose down -v
